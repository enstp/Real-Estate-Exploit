using System;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using RE.Core.Interfaces;
using RE.Domain.Entities;

namespace RE.Core.Business.Queries.Responses.Websites
{
    public class WebsiteDto : IMapFrom<Website>
    {
        public int Id { get; set; }

        [DisplayName("Website Name")]
        [Required]
        [MaxLength(50, ErrorMessage = "Maximum 50 characters only")]
        public string Name { get; set; }

        [DisplayName("Domain Name")]
        [Required]
        [MaxLength(50, ErrorMessage = "Maximum 50 characters only")]
        public string Domain { get; set; }

        [DisplayName("Url")]
        [Required]
        public string Url { get; set; }

        [DisplayName("Logo")]
        public string Logo { get; set; }

        [DisplayName("Scrapper Type")]
        [Required]
        [MaxLength(200, ErrorMessage = "Maximum 200 characters only")]
        public string Scrapper { get; set; }

        [DisplayName("Offers")]
        public int Offers { get; set; }

        [DisplayName("Active")]
        public bool Active { get; set; }

        public void Mapping(AutoMapper.Profile profile)
        {
            profile.CreateMap<Website, WebsiteDto>()
                .ForMember(d => d.Offers, s => s.MapFrom(w => w.Offers.Count))
                .ForMember(d => d.Logo, s => s.MapFrom(w => $"data:image/gif;base64,{Convert.ToBase64String(w.Logo)}"));
        }
    }
}
