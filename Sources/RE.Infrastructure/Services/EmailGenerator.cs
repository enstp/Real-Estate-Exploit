using System;
using System.Text;
using RandomNameGeneratorLibrary;
using RE.Core.Interfaces.Services;

namespace RE.Infrastructure.Services
{
    public class EmailGenerator : IEmailGenerator
    {
        private const string _alphanumericChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        private readonly IPersonNameGenerator _personNameGenerator;

        public EmailGenerator(IPersonNameGenerator personNameGenerator)
        {
            _personNameGenerator = personNameGenerator;
        }

        public string GenerateEmail(string domain)
        {
            var randomNames = _personNameGenerator.GenerateRandomFirstAndLastName();
            var randomUserName = randomNames.ToLowerInvariant().Replace(" ", "_");
            return $"{randomUserName}@{domain}";
        }

        public string GeneratePassword()
        {
            return GenerateAlphanumericKey(5);
        }

        private string GenerateAlphanumericKey(int length)
        {
            var alphanumericChars = _alphanumericChars.ToCharArray();
            var random = new Random();
            var result = new StringBuilder(length);
            for (var i = 0; i < length; i++)
            {
                var randomPosition = random.Next(0, alphanumericChars.Length - 1);
                result.Append(alphanumericChars[randomPosition]);
            }

            return result.ToString();
        }
    }
}