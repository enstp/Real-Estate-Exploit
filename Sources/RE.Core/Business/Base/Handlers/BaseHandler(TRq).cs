using System.Threading;
using System.Threading.Tasks;
using MediatR;
using RE.Core.Business.Base.Requests;
using RE.Core.Exceptions;

namespace RE.Core.Business.Base.Handlers
{
    public abstract class BaseHandler<TRq> : IRequestHandler<TRq> where TRq : BaseRequest
    {
        public async Task<Unit> Handle(TRq request, CancellationToken cancellationToken)
        {
            if (request.Items is null)
            {
                throw new InvalidWebsiteHandlerArgumentException(nameof(request.Items));
            }

            await HandleRequest(request, cancellationToken);
            return Unit.Value;
        }

        public abstract Task HandleRequest(TRq request, CancellationToken cancellationToken);
    }
}
