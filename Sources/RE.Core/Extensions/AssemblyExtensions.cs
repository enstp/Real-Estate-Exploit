using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;

namespace RE.Core.Extensions
{
    public static class AssemblyExtensions
    {
        public static IEnumerable<Type> GetImplementorTypes<TInterface>(this Assembly assembly)
        {
            return assembly.GetImplementorTypes(typeof(TInterface));
        }

        public static IEnumerable<Type> GetImplementorTypes(this Assembly assembly, Type interfaceType)
        {
            return assembly
                .GetTypes()
                .Where(x => x.IsAnyTypeOf(interfaceType) && !x.IsInterface && !x.IsAbstract);
        }
    }
}
