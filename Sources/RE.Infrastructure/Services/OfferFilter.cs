using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using RE.Core.Business.Queries.Responses.Offers;
using RE.Core.Configuration;
using RE.Core.Extensions;
using RE.Core.Interfaces.Services;
using RE.Domain.Constants;

namespace RE.Infrastructure.Services
{
    public class OfferFilter : IOfferFilter
    {
        private List<OfferDto> _offers = new();

        public IList<OfferDto> Result => _offers;

        public IOfferFilter FilterBy<T>(IList<OfferDto> offers, string parameter, Func<OfferDto, T> selector)
        {
            var parameters = parameter.SplitBy(Delimiters.Semicolon).Select(p => p.Convert<T>()).ToList();
            _offers = offers.Where(e => parameters.Contains(selector(e))).ToList();
            return this;
        }

        public IOfferFilter ThenBy<T>(string parameter, Func<OfferDto, T> selector)
        {
            FilterBy(_offers, parameter, selector);
            return this;
        }
    }
}