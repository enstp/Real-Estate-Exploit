using System.Collections.Generic;
using System.Linq;
using Microsoft.AspNetCore.Razor.TagHelpers;

namespace RE.Frontier.TagHelpers
{
    [HtmlTargetElement(Attributes = ConditionalClassPrefix + "*")]
    public class ConditionalClassTagHelper : TagHelper
    {
        public const string ConditionalClassPrefix = "asp-conditional-class-";

        [HtmlAttributeName(DictionaryAttributePrefix = ConditionalClassPrefix)]
        public IDictionary<string, bool> ConditionalClasses { get; set; } = new Dictionary<string, bool>();

        public override void Process(TagHelperContext context, TagHelperOutput output)
        {
            var allItems = ConditionalClasses.Where(i => i.Value).Select(i => i.Key).ToList();
            
            if (allItems.Count == 0)
            {
                return;
            }

            var classAttr = output.Attributes["class"];
            var originalClass = classAttr?.Value?.ToString();
            if (!string.IsNullOrWhiteSpace(originalClass))
            {
                allItems.Add(originalClass);
            }

            var finalClass = string.Join(" ", allItems);
            output.Attributes.SetAttribute("class", finalClass);
        }
    }
}