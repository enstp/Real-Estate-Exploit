using MediatR;
using RE.Core.Interfaces;

namespace RE.Core.Business.Commands.Requests.Settings
{
    public class UpdateSettingsCommand : IRequest, IMapFrom<Configuration.Settings>
    {
        public bool UseScreenShotMachineApi { get; set; }

        public string ScreenShotMachineApiKey { get; set; }

        public int OfferCount { get; set; }

        public string ScrapperDirectory { get; set; }

        public bool TakeScreenShots { get; set; }

        public string ScreenShotsDirectory { get; set; }

        public string ChromeDriverDirectory { get; set; }

        public string Chrono { get; set; }

        public int TimeoutCoverage { get; set; }

        public void Mapping(AutoMapper.Profile profile)
        {
            profile.CreateMap<Configuration.Settings, UpdateSettingsCommand>()
                .ReverseMap();
        }
    }
}
