// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RE.Infrastructure.Persistence;

namespace RE.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210426094756_RenamePriceFluctuationColumn")]
    partial class RenamePriceFluctuationColumn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RE.Domain.Entities.Alert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Floors")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IncommingOffers")
                        .HasColumnType("bit");

                    b.Property<string>("Partitioning")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("ReevaluatedOffers")
                        .HasColumnType("bit");

                    b.Property<string>("Rooms")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Email" }, "UK_Alerts")
                        .IsUnique();

                    b.ToTable("Alerts");
                });

            modelBuilder.Entity("RE.Domain.Entities.Evaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CapturedAt")
                        .HasColumnType("date");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "OfferId" }, "NCI_Offers");

                    b.ToTable("Evaluations");
                });

            modelBuilder.Entity("RE.Domain.Entities.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("date");

                    b.Property<short?>("Floor")
                        .HasColumnType("smallint");

                    b.Property<string>("Partitioning")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("date");

                    b.Property<short>("Rooms")
                        .HasColumnType("smallint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("WebsiteId")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "WebsiteId" }, "NCI_Websites");

                    b.HasIndex(new[] { "Uid", "WebsiteId" }, "UK_Offers")
                        .IsUnique();

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("RE.Domain.Entities.Setting", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Key");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("RE.Domain.Entities.Website", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short>("Priority")
                        .HasColumnType("smallint");

                    b.Property<string>("Scrapper")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Websites");
                });

            modelBuilder.Entity("RE.Domain.Entities.Evaluation", b =>
                {
                    b.HasOne("RE.Domain.Entities.Offer", "Offer")
                        .WithMany("Evaluations")
                        .HasForeignKey("OfferId")
                        .HasConstraintName("FK_Evaluations_Offers")
                        .IsRequired();

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("RE.Domain.Entities.Offer", b =>
                {
                    b.HasOne("RE.Domain.Entities.Website", "Website")
                        .WithMany("Offers")
                        .HasForeignKey("WebsiteId")
                        .HasConstraintName("FK_Offers_Websites")
                        .IsRequired();

                    b.OwnsOne("RE.Domain.ValueObjects.Area", "Area", b1 =>
                        {
                            b1.Property<int>("OfferId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int?>("Total")
                                .HasColumnType("int")
                                .HasColumnName("TotalArea");

                            b1.Property<int?>("Usable")
                                .HasColumnType("int")
                                .HasColumnName("UsableArea");

                            b1.HasKey("OfferId");

                            b1.ToTable("Offers");

                            b1.WithOwner()
                                .HasForeignKey("OfferId");
                        });

                    b.Navigation("Area");

                    b.Navigation("Website");
                });

            modelBuilder.Entity("RE.Domain.Entities.Offer", b =>
                {
                    b.Navigation("Evaluations");
                });

            modelBuilder.Entity("RE.Domain.Entities.Website", b =>
                {
                    b.Navigation("Offers");
                });
#pragma warning restore 612, 618
        }
    }
}
