using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Threading;
using System.Threading.Tasks;
using RE.Domain.Entities.Base;

namespace RE.Core.Interfaces.Repository
{
	public interface IRepository<TEntity> where TEntity : Entity<int>
    {
        IQueryable<TEntity> Query();

        Task<TEntity> Get(int id, CancellationToken cancellation = default);

        Task<TEntity> Get(Expression<Func<TEntity, bool>> predicate, CancellationToken cancellation = default);

        Task<TEntity> Add(TEntity entity, CancellationToken cancellation = default);

        Task<TEntity> Update(TEntity entity, CancellationToken cancellation = default);

        Task<int> Delete(int id, CancellationToken cancellation = default);

        Task<int> Delete(TEntity entity, CancellationToken cancellation = default);

        Task<int> Delete(ICollection<TEntity> entities, CancellationToken cancellation = default);
    }
}