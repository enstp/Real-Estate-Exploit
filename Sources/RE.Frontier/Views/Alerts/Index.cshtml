@using RE.Core.Business.Queries.Responses.Alerts
@using RE.Core.Extensions
@model AlertsViewModel

@{
    ViewData["Title"] = "Alerts Page";
}

<div class="row">
    <div class="col-md-3 col-menu">
        <partial name="_ManageNav" for="Websites" />
    </div>
    <div class="col-md-9 col-grid">
        
        <a onclick="showInPopup('@Url.Action("Add", "Alerts")', 'Create new alert')"
           class="btn btn-info text-white my-3">
            <i class="fas fa-plus"></i> Add
        </a>

        <table class="table table-bordered">
            <thead>
                <tr>
                    <th class="text-center">
                        @Html.DisplayNameFor(model => model.Alerts[0].Id)
                    </th>
                    <th class="text-center">
                        @Html.DisplayNameFor(model => model.Alerts[0].Email)
                    </th>
                    <th class="text-center">
                        @Html.DisplayNameFor(model => model.Alerts[0].RoomTypes)
                    </th>
                    <th class="text-center">
                        @Html.DisplayNameFor(model => model.Alerts[0].FloorTypes)
                    </th>
                    <th class="text-center">
                        @Html.DisplayNameFor(model => model.Alerts[0].PartitionTypes)
                    </th>
                    <th class="text-center">
                        @Html.DisplayNameFor(model => model.Alerts[0].IncommingOffers)
                    </th>
                    <th class="text-center">
                        @Html.DisplayNameFor(model => model.Alerts[0].ReevaluatedOffers)
                    </th>
                    <th style="min-width: 200px">
                    </th>
                <tr>
            </thead>
            <tbody>
            @foreach (var alert in Model.Alerts)
            {
                <tr>
                    <td class="text-center">
                        @alert.Id
                    </td>
                    <td class="text-center">
                        @alert.Email
                    </td>
                    <td class="text-center">
                        @alert.RoomTypes.Select(r => r.GetDisplayName()).JoinBy(", ")
                    </td>
                    <td class="text-center">
                        @alert.FloorTypes.Select(f => f.GetDisplayName()).JoinBy(", ")
                    </td>
                    <td class="text-center">
                        @alert.PartitionTypes.Select(p => p.GetDisplayName()).JoinBy(", ")
                    </td>
                    <td class="text-center">
                        <div class="custom-control custom-switch">
                            <input asp-for="@alert.IncommingOffers" class="custom-control-input" disabled>
                            <label class="custom-control-label"></label>
                        </div>
                    </td>
                    <td class="text-center">
                        <div class="custom-control custom-switch">
                            <input asp-for="@alert.ReevaluatedOffers" class="custom-control-input" disabled>
                            <label class="custom-control-label"></label>
                        </div>
                    </td>

                    <td class="text-center">
                        <a onclick="showInPopup('@Url.Action("Edit", "Alerts", new { alert.Id })', 'Edit alert @alert.Id')"
                           class="btn btn-info text-white">
                            <i class="fas fa-pencil-alt"></i> Edit
                        </a>
                        <form asp-action="Delete" asp-controller="Alerts" asp-route-id="@alert.Id" onsubmit="return jQueryAjaxDelete(this)" class="d-inline">
                            <input type="submit" value="Delete" class="btn btn-danger" />
                        </form>
                    </td>
                </tr>
            }
            </tbody>
        </table>

    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}