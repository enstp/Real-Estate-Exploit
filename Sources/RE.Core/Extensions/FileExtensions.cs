using System.IO;

namespace RE.Core.Extensions
{
    public static class FileExtensions
    {
        public static void SafeMove(this FileInfo file, string destFileName)
        {
            var newFile = new FileInfo(destFileName);
            newFile.Directory.EnsureExists();
            file.MoveTo(destFileName, true);
        }

        public static void SafeMove(this FileInfo file, DirectoryInfo destDirectory)
        {
            destDirectory.EnsureExists();
            var fileNameAndExtension = Path.GetFileName(file.FullName);
            var filePath = Path.Combine(destDirectory.FullName, fileNameAndExtension);
            file.MoveTo(filePath);
        }

        public static void Rename(this FileInfo file, string newName)
        {
            var newNameWithExtension = $"{newName}{file.Extension}";
            var newFile = Path.Combine(file.DirectoryName, newNameWithExtension);
            file.SafeMove(newFile);
        }

        public static DirectoryInfo EnsureExists(this DirectoryInfo directory)
        {
            if (!directory.Exists)
            {
                directory.Create();
            }

            return directory;
        }

        public static byte[] ToByteArray(this FileInfo fileInfo)
        {
            return File.ReadAllBytes(fileInfo.FullName);
        }
    }
}
