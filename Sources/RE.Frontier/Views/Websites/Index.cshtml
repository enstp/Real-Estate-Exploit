@using RE.Core.Business.Queries.Responses.Offers;
@using RE.Domain.Constants
@using RE.Domain.Enums
@using Microsoft.Extensions.Options
@using RE.Core.Configuration
@using RE.Core.Interfaces.Services
@using RE.Core.Models.Filters

@inject IOptions<UrlSettings> UrlSettings
@inject IAuthService AuthService
@model OfferViewModel

@{
    ViewData["Title"] = "Offers";
    var applicationUrl = AuthService.IsAuthorized ? "/" : UrlSettings.Value.ApplicationWebsiteTunnelUrl;
    var paging = Model.Offers.PagingData;
    var ascending = Model.Sort.SortDirection == SortDirection.Ascending;
    var descending = Model.Sort.SortDirection == SortDirection.Descending;
    var sortIcon = Html.Raw($@"<i class=""fas fa-arrow-{(ascending ? "up" : "down")} color-warning ml-3""></i>");
}

<div class="row">
    <div class="col-md-3 col-menu">
        <partial name="_ManageNav" for="Websites" />
    </div>
    <div class="col-md-9 col-grid">

        <form asp-action="Index" id="main-form"
              asp-route-search="@Model.Search" asp-route-sort="@Model.Sort" asp-route-filter="@Model.Filter">

            <!-- Hidden filter field triggered availability element -->
            <input type="hidden" asp-for="@Model.Filter.AvailabilityType" id="availability-filter" />

            <!-- Hidden filter field triggered collapse element -->
            <input type="hidden" asp-for="@Model.Filter.Shown" id="show-filter" />

            <!-- Hidden paging field triggered by pagination links -->
            <input type="hidden" asp-for="@paging.CurrentPage" id="current-page" />

            <!-- Hidden paging field triggered by pagination size -->
            <input type="hidden" asp-for="@paging.PageSize" id="page-size" />

            <!-- Hidden sort fields triggered by header columns -->
            <input type="hidden" asp-for="Sort.SortFieldName" id="sort-field-name" />
            <input type="hidden" asp-for="Sort.SortDirection" id="sort-direction" />

            <!-- Search section -->
            <partial name="Index/_Search" for="Search" />

            <!-- Filter section -->
            <partial name="Index/_Filter" for="Filter" />

        </form>

        <br />

        <table class="table offers-table">
            <thead class="thead-light">
                <tr>
                    <th width="80">
                        @Html.DisplayNameFor(model => model.Offers.Data[0].Uid)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Offers.Data[0].Active)
                    </th>
                    <th>
                        <a href="#/" data-sort-field-name="@SortFields.Price">
                            @Html.DisplayNameFor(model => model.Offers.Data[0].Price)
                            @(Model.Sort.SortFieldName == SortFields.Price ? sortIcon : default)
                        </a>
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Offers.Data[0].Rooms)
                    </th>
                    <th>
                        <a href="#/" data-sort-field-name="@SortFields.PublishDate">
                            @Html.DisplayNameFor(model => model.Offers.Data[0].PublishDate)
                            @(Model.Sort.SortFieldName == SortFields.PublishDate ? sortIcon : default)
                        </a>
                    </th>
                    <th>
                        <a href="#/" data-sort-field-name="@SortFields.Evaluations">
                            @Html.DisplayNameFor(model => model.Offers.Data[0].Evaluations)
                            @(Model.Sort.SortFieldName == SortFields.Evaluations ? sortIcon : default)
                        </a>
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Offers.Data[0].Trend)
                    </th>
                    <th>
                        <a href="#" id="open-all-links">
                            @Html.DisplayNameFor(model => model.Offers.Data[0].Url)
                            <i class="fas fa-external-link-square-alt"></i>
                        </a>
                    </th>
                    <th width="180"></th>
                    <th width="60"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Offers.Data)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Uid)
                        </td>
                        <td>
                            @(Html.Raw(item.Active
                            ? @"<i class=""fas fa-check text-success mt-2 mr-2""></i>"
                            : @"<i class=""fas fa-ban text-danger mt-2 mr-2""></i>"))
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Price)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Rooms)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PublishDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Evaluations)
                        </td>
                        <td>
                            @(Html.Raw(item.Trend == Trend.Linear ? string.Empty :
                            (item.Trend == Trend.Ascending
                                ? @"<i class=""fas fa-sort-amount-up text-danger""></i>"
                                : @"<i class=""fas fa-sort-amount-down text-success""></i>")))
                        </td>
                        <td>
                            <a href="@item.Url" target="_blank" class="js-open-link">
                                <i class="fas fa-external-link-alt mt-2"></i>
                            </a>
                        </td>
                        @if (Model.AuthorizedAccess)
                        {
                            <td>
                                <a onclick="showInPopup('@Flurl.Url.Combine(applicationUrl, Url.Action("Edit", "Offers", new {item.Id}))', 'Edit offer @item.Id')"
                                   class="btn btn-info text-white">
                                    <i class="fas fa-pencil-alt"></i> Edit
                                </a>
                                <form asp-action="Delete" asp-controller="Offers" asp-route-id="@item.Id" onsubmit="return jQueryAjaxDelete(this)" class="d-inline">
                                    <input type="submit" value="Delete" class="btn btn-danger" />
                                </form>
                            </td>
                        }
                        else
                        {
                            <td>
                                <a onclick="showInPopup('@Flurl.Url.Combine(applicationUrl, Url.Action("Details", "Offers", new {item.Id}))', 'Inspect offer @item.Uid')"
                                   class="btn btn-info text-white">
                                    <i class="fas fa-home"></i> Inspect
                                </a>
                            </td>
                        }
                        <td>
                            <a href="#" onclick="showInPopup('@Flurl.Url.Combine(applicationUrl, Url.Action("Index", "Evaluations", new {offerId = item.Id}))', '@item.Uid - Price Variations')"
                               data-toggle="tooltip" data-placement="top" title="Show price variations">
                                <i class="fas fa-eye mt-2"></i>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <span class="float-right m-2">Offers: <b>@paging.TotalNumberOfItems</b></span>

        <partial name="Index/_Paging" for="Offers.PagingData" />

    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

<script type="text/javascript">
            var formSelector = '#main-form';
            var sortFieldSelector = 'a[data-sort-field-name]';
            var currentPageSelector = 'a[data-current-page]';
            var pageSizeSelector = '.page-size';
            var publishDateFromSelector = '#publish-date-from';
            var publishDateToSelector = '#publish-date-to';
            var rangeFilterSelector = '#range-filter';
            var openAllLinksSelector = '#open-all-links';
            var openLinkSelector = '.js-open-link';

            $(document).ready(function() {

                $(sortFieldSelector).click(function(e) {
                    e.preventDefault();
                    var jqThis = $(this), jqForm = $(formSelector);

                    var sortFieldName = jqThis.data('sort-field-name');
                    jqForm.find('#sort-field-name').val(sortFieldName);

                    var sortDirection = '@(ascending ? SortDirection.Descending : SortDirection.Ascending)';
                    jqForm.find('#sort-direction').val(sortDirection);

                    jqForm.find('#current-page').val(1);

                    submitForm();
                });

                $(currentPageSelector).click(function(e) {
                    e.preventDefault();
                    var jqThis = $(this), jqForm = $(formSelector);

                    var currentPage = jqThis.data('current-page');
                    jqForm.find('#current-page').val(currentPage);

                    submitForm();
                });

                $(pageSizeSelector).change(function(e) {
                    var jqThis = $(this), jqForm = $(formSelector);

                    var pageSize = jqThis.val();
                    jqForm.find('#page-size').val(pageSize);

                    submitForm();
                });

                $('#filter-panel').on('show.bs.collapse',
                    function() {
                        $('#reset-filter').removeClass('d-none');
                        $(formSelector).find('#show-filter').val('@true');
                    });

                $('#filter-panel').on('hidden.bs.collapse',
                    function() {
                        $('#reset-filter').addClass('d-none');
                        $(formSelector).find('#show-filter').val('@false');
                    });

                var publishDateFrom = $(publishDateFromSelector).val();
                var publishDateTo = $(publishDateToSelector).val();
                $(publishDateFromSelector).prop('max', publishDateTo);
                $(publishDateToSelector).prop('min', publishDateFrom);

                $(rangeFilterSelector).change(function (e) {
                    var jqThis = $(this), jqForm = $(formSelector);

                    var val = jqThis.val();
                    var availability = null;
                    if (val == 1) {
                        jqThis.removeClass('rangeAll').removeClass('rangePassive').addClass('rangeActive');
                        availability = '@AvailabilityFilter.Active';
                    } else if (val == 2) {
                        jqThis.removeClass('rangeActive').removeClass('rangePassive').addClass('rangeAll');
                        availability = '@AvailabilityFilter.All';
                    } else if (val == 3) {
                        jqThis.removeClass('rangeAll').removeClass('rangeActive').addClass('rangePassive');
                        availability = '@AvailabilityFilter.Expired';
                    }

                    $('label[for="range-filter"]').text(availability);
                    jqForm.find('#availability-filter').val(availability);

                    submitForm();
                });

                $(openAllLinksSelector).click(function () {
                    $.each($(openLinkSelector), (ind, el) => {
                        var url = $(el).attr('href');
                        window.open(url, '_blank');
                    });
                });
            });

            function filterIfEnterPressed(e) {
                var keycode;
                if (window.event)
                    keycode = window.event.keyCode;
                else if (e)
                    keycode = e.which;
                if (keycode === 13) {
                    submitForm();
                    return false;
                }
            }

            function submitForm() {
                var jqForm = $(formSelector);
                jqForm.submit();
            }
</script>
}