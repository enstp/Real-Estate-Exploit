using Microsoft.AspNetCore.Hosting;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.Hosting;
using RE.Infrastructure.Persistence.Source;

namespace RE.Frontier.Infrastructure.Builders
{
    public static class EnvironmentConfigurationBuilder
    {
        public static IConfigurationRoot Build(IWebHostEnvironment environment)
        {
            var builder = new ConfigurationBuilder()
                .SetBasePath(environment.ContentRootPath)
                .AddJsonFile("appsettings.json", false, true)
                .AddJsonFile($"appsettings.{environment.EnvironmentName}.json", true, true)
                .AddEnvironmentVariables();

            if (environment.IsDevelopment())
            {
                builder.AddUserSecrets<Startup>();
            }

            var configuration = builder.Build();

            var connectionString = configuration.GetConnectionString("DefaultConnection");

            configuration = builder
                .Add(new EntityFrameworkConfigurationSource(options => options.UseSqlServer(connectionString)))
                .Build();

            return configuration;
        }
    }
}