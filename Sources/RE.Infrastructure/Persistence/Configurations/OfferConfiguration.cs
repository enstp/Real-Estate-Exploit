using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using RE.Domain.Entities;
using RE.Domain.ValueObjects;

namespace RE.Infrastructure.Persistence.Configurations
{
    public class OfferConfiguration : IEntityTypeConfiguration<Offer>
    {
        public void Configure(EntityTypeBuilder<Offer> builder)
        {
            builder.HasIndex(e => new { e.Uid, e.WebsiteId }, "UK_Offers")
                .IsUnique();

            builder.Property(e => e.ExpiredAt)
                .HasColumnType("date")
                .HasAnnotation("Relational:ColumnType", "date");

            builder.Property(e => e.Partitioning)
                .HasMaxLength(20)
                .IsUnicode(false);

            builder.Property(e => e.PublishedAt)
                .HasColumnType("date")
                .HasAnnotation("Relational:ColumnType", "date");

            builder.Property(e => e.Uid)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);

            builder.Property(e => e.Url)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false);

            builder.Property(e => e.Year)
                .HasMaxLength(20)
                .IsUnicode(false);

            // Area value object persisted as owned navigation entity
            var ownedLanguageBuilder = builder.OwnsOne(o => o.Area);
            ownedLanguageBuilder.Property(p => p.Usable).HasColumnName($"{nameof(Area.Usable)}{nameof(Area)}");
            ownedLanguageBuilder.Property(p => p.Total).HasColumnName($"{nameof(Area.Total)}{nameof(Area)}");

            builder.HasOne(d => d.Website)
                .WithMany(p => p.Offers)
                .HasForeignKey(d => d.WebsiteId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Offers_Websites");

            builder.HasIndex(e => e.WebsiteId, "NCI_Websites");
        }
    }
}
