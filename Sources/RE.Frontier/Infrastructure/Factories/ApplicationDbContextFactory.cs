using Microsoft.AspNetCore.Hosting;
using Microsoft.EntityFrameworkCore.Design;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
using RE.Infrastructure.Persistence;

namespace RE.Frontier.Infrastructure.Factories
{
    /// <summary>
    ///  Enables design-time services (like migrations) for context types that do not have a public default constructor.
    /// >> dotnet ef migrations add InitialMigration -s ../RE.Frontier/                -- or CreateIdentitySchema name
    /// >> dotnet ef database update -s ../RE.Frontier/
    /// </summary>
    public class ApplicationDbContextFactory : IDesignTimeDbContextFactory<ApplicationDbContext>
    {
        public ApplicationDbContext CreateDbContext(string[] args)
        {
            return Host.CreateDefaultBuilder(args)
                .ConfigureWebHostDefaults(webBuilder => webBuilder.UseStartup<Startup>())
                .UseDefaultServiceProvider(options => options.ValidateScopes = false)
                .Build()
                .Services
                .GetRequiredService<ApplicationDbContext>();
        }
    }
}