using System.Threading;
using System.Threading.Tasks;
using MediatR;
using RE.Core.Business.Base.Requests;
using RE.Core.Exceptions;

namespace RE.Core.Business.Base.Handlers
{
    public abstract class BaseHandler<TRq, TRs> : IRequestHandler<TRq, TRs> where TRq : BaseRequest<TRs>
    {
        public async Task<TRs> Handle(TRq request, CancellationToken cancellationToken)
        {
            if (request.Items is null)
            {
                throw new InvalidWebsiteHandlerArgumentException(nameof(request.Items));
            }

            return await HandleRequest(request, cancellationToken);
        }

        public abstract Task<TRs> HandleRequest(TRq request, CancellationToken cancellationToken);
    }
}
