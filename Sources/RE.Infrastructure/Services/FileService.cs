using System;
using System.IO;
using System.Threading;
using System.Threading.Tasks;
using RE.Core.Business.Queries.Responses.Offers;
using RE.Core.Configuration;
using RE.Core.Extensions;
using RE.Core.Interfaces.Services;

namespace RE.Infrastructure.Services
{
    public class FileService : IFileService
    {
        private readonly IWebshotService _webshotService;
        private readonly Settings _settings;

        public FileService(IWebshotService webshotService, Settings settings)
        {
            _webshotService = webshotService;
            _settings = settings;
        }

        public async Task<FileInfo> SaveOffer(OfferDto offer, CancellationToken cancellationToken = default)
        {
            var offerFile = _settings.GetOfferFile(offer);
            offerFile.Directory.EnsureExists();

            var snapshot = await _webshotService.TakeShot(new Uri(offer.Url), cancellationToken);
            snapshot.SaveTo(offerFile);

            return offerFile;
        }

        public void Dispose()
        {
            _webshotService.Dispose();
        }
    }
}