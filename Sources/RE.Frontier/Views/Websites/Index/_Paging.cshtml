@using RE.Core.Models.Pagination
@model PagingData

@if (Model.NumberOfPages > 1)
{
    <nav class="d-flex">
        <ul class="pagination">
            @if (Model.CurrentPage > 1)
            {
                <li id="previousPage" class="page-item">
                    <a href="#/" class="page-link" data-current-page="@(Model.CurrentPage - 1)">
                        Prev
                    </a>
                </li>
            }

            @foreach (var i in Model.PagesToDisplay.OrderBy(item => item))
            {
                <li id="page @i" class="page-item" asp-conditional-class-active="@(Model.CurrentPage == i)">
                    <a href="#/" class="page-link" data-current-page="@i">
                        @i
                    </a>
                </li>
            }

            @if (Model.CurrentPage < Model.NumberOfPages)
            {
                <li id="nextPage" class="page-item">
                    <a href="#/" class="page-link" data-current-page="@(Model.CurrentPage + 1)">
                        Next
                    </a>
                </li>
            }

        </ul>
        <div class="col-md-4 d-flex">
            <span class="mt-1 mr-3">Show on page:</span>
            <select class="form-control w-25 page-size" 
                asp-for="PageSize" asp-items="Model.AvailablePageSizes"></select>
        </div>

    </nav>
}